# Generated by Django 5.1 on 2025-09-17 09:07

import apps.incident_reporting.models
import django.db.models.deletion
import django.utils.timezone
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Incident",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "incident_title",
                    models.CharField(
                        help_text="Unique case identifier or short descriptive name",
                        max_length=200,
                        unique=True,
                    ),
                ),
                (
                    "date_of_incident",
                    models.DateField(help_text="When the incident happened"),
                ),
                (
                    "time_of_incident",
                    models.TimeField(help_text="Exact time of occurrence"),
                ),
                (
                    "facility",
                    models.CharField(
                        help_text="Location / Facility name where incident occurred",
                        max_length=100,
                    ),
                ),
                (
                    "department",
                    models.CharField(
                        help_text="Department where incident occurred", max_length=100
                    ),
                ),
                (
                    "site",
                    models.CharField(
                        help_text="Specific site location", max_length=100
                    ),
                ),
                (
                    "category",
                    models.CharField(
                        choices=[
                            ("INCIDENT", "Incident"),
                            ("NEAR_MISS", "Near-Miss"),
                            ("UNSAFE_ACT", "Unsafe Act"),
                            ("UNSAFE_CONDITION", "Unsafe Condition"),
                        ],
                        help_text="Type of incident",
                        max_length=20,
                    ),
                ),
                (
                    "sub_category",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("FIRE", "Fire"),
                            ("SPILL", "Spill"),
                            ("EXPOSURE", "Exposure"),
                            ("EQUIPMENT_FAILURE", "Equipment Failure"),
                            ("CHEMICAL_LEAK", "Chemical Leak"),
                            ("EXPLOSION", "Explosion"),
                            ("ELECTRICAL", "Electrical"),
                            ("STRUCTURAL", "Structural"),
                            ("ENVIRONMENTAL", "Environmental"),
                            ("OTHER", "Other"),
                        ],
                        help_text="Specific sub-category if applicable",
                        max_length=20,
                        null=True,
                    ),
                ),
                (
                    "description",
                    models.TextField(help_text="Detailed narrative of what occurred"),
                ),
                (
                    "persons_involved_type",
                    models.CharField(
                        choices=[
                            ("EMPLOYEE", "Employee"),
                            ("CONTRACTOR", "Contractor"),
                            ("THIRD_PARTY", "Third Party"),
                            ("VISITOR", "Visitor"),
                        ],
                        help_text="Type of person involved",
                        max_length=20,
                    ),
                ),
                (
                    "persons_involved_details",
                    models.TextField(
                        help_text="Details of persons involved (names, roles, etc.)"
                    ),
                ),
                (
                    "injury_damage_type",
                    models.CharField(
                        choices=[
                            ("NO_INJURY", "No Injury"),
                            ("MINOR_INJURY", "Minor Injury"),
                            ("MAJOR_INJURY", "Major Injury"),
                            ("FATALITY", "Fatality"),
                            ("PROPERTY_DAMAGE", "Property Damage"),
                            ("ENVIRONMENTAL_IMPACT", "Environmental Impact"),
                            ("NEAR_MISS", "Near Miss"),
                        ],
                        help_text="Type of injury or damage occurred",
                        max_length=30,
                    ),
                ),
                (
                    "injury_damage_details",
                    models.TextField(
                        blank=True,
                        help_text="Detailed description of injury or damage",
                        null=True,
                    ),
                ),
                (
                    "waste_type",
                    models.CharField(
                        choices=[
                            ("HAZARDOUS", "Hazardous"),
                            ("NON_HAZARDOUS", "Non-Hazardous"),
                            ("BIOMEDICAL", "Biomedical"),
                            ("E_WASTE", "E-Waste"),
                            ("CHEMICAL", "Chemical"),
                            ("CONSTRUCTION", "Construction"),
                            ("NOT_APPLICABLE", "Not Applicable"),
                        ],
                        default="NOT_APPLICABLE",
                        help_text="Type of waste involved if applicable",
                        max_length=20,
                    ),
                ),
                (
                    "waste_category_code",
                    models.CharField(
                        blank=True,
                        help_text="Regulatory classification (e.g., Hazardous Waste 5.1 â€“ Used Oil)",
                        max_length=100,
                        null=True,
                    ),
                ),
                (
                    "reported_by_type",
                    models.CharField(
                        choices=[
                            ("EMPLOYEE", "Employee"),
                            ("CONTRACTOR", "Contractor"),
                            ("VISITOR", "Visitor"),
                            ("IOT_SENSOR", "Automated IoT Sensor Trigger"),
                        ],
                        help_text="Who reported the incident",
                        max_length=20,
                    ),
                ),
                (
                    "reported_by_name",
                    models.CharField(
                        help_text="Name of the person/system that reported",
                        max_length=100,
                    ),
                ),
                (
                    "reported_by_contact",
                    models.CharField(
                        blank=True,
                        help_text="Contact information of reporter",
                        max_length=100,
                        null=True,
                    ),
                ),
                (
                    "reporting_date",
                    models.DateTimeField(
                        default=django.utils.timezone.now,
                        help_text="When the incident was officially logged",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("is_active", models.BooleanField(default=True)),
            ],
            options={
                "verbose_name": "Incident",
                "verbose_name_plural": "Incidents",
                "ordering": ["-reporting_date", "-date_of_incident"],
                "indexes": [
                    models.Index(
                        fields=["date_of_incident"],
                        name="incident_re_date_of_e90fb8_idx",
                    ),
                    models.Index(
                        fields=["category"], name="incident_re_categor_330f61_idx"
                    ),
                    models.Index(
                        fields=["facility"], name="incident_re_facilit_0081ab_idx"
                    ),
                    models.Index(
                        fields=["reporting_date"], name="incident_re_reporti_7afe47_idx"
                    ),
                ],
            },
        ),
        migrations.CreateModel(
            name="IncidentAttachment",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "file",
                    models.FileField(
                        help_text="Upload incident evidence files",
                        upload_to=apps.incident_reporting.models.incident_attachment_path,
                    ),
                ),
                ("filename", models.CharField(max_length=255)),
                (
                    "file_size",
                    models.PositiveIntegerField(help_text="File size in bytes"),
                ),
                (
                    "attachment_type",
                    models.CharField(
                        choices=[
                            ("PHOTO", "Photo"),
                            ("VIDEO", "Video"),
                            ("VOICE_NOTE", "Voice Note"),
                            ("DOCUMENT", "Document"),
                            ("OTHER", "Other"),
                        ],
                        help_text="Type of attachment",
                        max_length=15,
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        blank=True, help_text="Description of the attachment", null=True
                    ),
                ),
                ("uploaded_at", models.DateTimeField(auto_now_add=True)),
                (
                    "incident",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="attachments",
                        to="incident_reporting.incident",
                    ),
                ),
            ],
            options={
                "verbose_name": "Incident Attachment",
                "verbose_name_plural": "Incident Attachments",
                "ordering": ["-uploaded_at"],
            },
        ),
    ]
